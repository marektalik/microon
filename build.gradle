allprojects {
    // Maven compatibility
    apply plugin: 'maven'
    group = 'com.github.microon'
    version = '0.1-SNAPSHOT'

    // Dependencies
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}

subprojects {
    // JVM

    apply plugin: 'scala'

    // Dependencies

    ext {
        camelVersion = '2.12.1'
        guavaDependency = 'com.google.guava:guava:15.0'
        scalaVersion = '2.10.2'
        scalapiVersion = '0.6'
        scalapiHibernateDependency = "com.github.scalapi:scalapi-hibernate:$scalapiVersion"
        scalapiQueryDslDependency = "com.github.scalapi:scalapi-querydsl:$scalapiVersion"
        springScalaDependency = 'org.springframework.scala:spring-scala_2.10:1.0.0.RC1'
        queryDslVersion = '3.2.4'
    }

    dependencies {
        compile("com.github.scalapi:scalapi-jdk:$scalapiVersion") {
            changing = true
        }
        compile 'javax.inject:javax.inject:1'
        compile "org.scala-lang:scala-library:$scalaVersion"
        compile "org.scala-lang:scala-reflect:$scalaVersion"
        compile 'org.slf4j:slf4j-api:1.7.5'

        testCompile guavaDependency
        testCompile 'junit:junit:4.11'
        testCompile 'org.scalatest:scalatest_2.10:2.0'
        testCompile 'org.mockito:mockito-core:1.9.5'
        testCompile 'ch.qos.logback:logback-classic:1.0.13'
        testCompile springScalaDependency
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'http://repo.springsource.org/snapshot' }
        maven { url 'http://repo.springsource.org/libs-milestone' }
    }

    // Releasing

    apply plugin: 'signing'
    ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

    task scaladocJar(type: Jar, dependsOn: scaladoc) {
        classifier = 'javadoc'
        from 'build/docs/scaladoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives scaladocJar
        archives sourcesJar
    }

    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

                def snapshotRepo = 'https://oss.sonatype.org/content/repositories/snapshots/'
                def releaseRepo = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                repository(url: isReleaseVersion ? releaseRepo : snapshotRepo) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'microon'
                    packaging 'jar'
                    url 'https://github.com/hekonsek/microon'
                    description 'Micro Services framework'

                    scm {
                        url 'scm:git@github.com:hekonsek/microon.git'
                        connection 'scm:git@github.com:hekonsek/microon.git'
                        developerConnection 'scm:git@github.com:hekonsek/microon.git'
                    }

                    developers {
                        developer {
                            id 'hekonsek'
                            name 'Henryk Konsek'
                        }
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }
    }

}

project('microon-ri') {
    dependencies {
        compile project(':microon-spi-scala')

        optional guavaDependency
        optional springScalaDependency
    }
}

project('microon-services') {
    subprojects {
        dependencies {
            compile project(':microon-spi-scala')

            testCompile project(':microon-ri')
        }
    }

    project('microon-services-audit') {
        dependencies {
            compile "org.apache.camel:camel-scala:$camelVersion"
            compile "org.apache.camel:camel-mongodb:$camelVersion"
            compile guavaDependency

            optional 'org.springframework:spring-context:3.2.5.RELEASE'

            testCompile project(':microon-services:microon-services-repository')
            testCompile "com.github.scalapi:scalapi-embedmongo:$scalapiVersion"
            testCompile "org.apache.camel:camel-spring:$camelVersion"
        }
    }

    project('microon-services-auth') {
        dependencies {
            compile guavaDependency
            optional 'javax.servlet:servlet-api:3.0-alpha-1'
            optional 'com.google.api-client:google-api-client:1.15.0-rc'
            optional 'com.google.http-client:google-http-client-jackson2:1.15.0-rc'
            optional 'com.google.apis:google-api-services-plus:v1-rev77-1.15.0-rc'
            optional 'com.google.apis:google-api-services-oauth2:v2-rev39-1.15.0-rc'
        }
    }

    project('microon-services-calendar') {
        dependencies {
            compile guavaDependency
            compile "org.apache.camel:camel-scala:$camelVersion"
            compile 'com.google.apis:google-api-services-calendar:v3-rev47-1.15.0-rc'
            compile 'com.google.http-client:google-http-client-jackson2:1.15.0-rc'

            testCompile "org.apache.camel:camel-test:$camelVersion"
        }
    }

    project('microon-services-contacts') {
        dependencies {
            compile project(':microon-ri')

            compile 'com.google.gdata:core:1.47.1'
        }
    }

    project('microon-services-repository') {
        dependencies {
            compile 'org.springframework.data:spring-data-commons:1.6.2.RELEASE'
            optional "com.mysema.querydsl:querydsl-jpa:${queryDslVersion}"

            optional "com.mysema.querydsl:querydsl-mongodb:${queryDslVersion}"
            compile 'org.springframework.data:spring-data-mongodb:1.3.2.RELEASE'

            testRuntime 'org.hsqldb:hsqldb:2.2.8'
            testCompile(scalapiHibernateDependency) {
                changing = true
            }
            testCompile(scalapiQueryDslDependency) {
                changing = true
            }
            testCompile "com.github.scalapi:scalapi-embedmongo:$scalapiVersion"
        }
    }

    project('microon-services-useractivation') {
        dependencies {
            compile project(':microon-services:microon-services-usermanagement')
            optional(scalapiQueryDslDependency)
        }
    }

    project('microon-services-usermanagement') {
        dependencies {
            compile project(':microon-services:microon-services-repository')

            testCompile guavaDependency
        }
    }
}

buildscript {
    repositories {
        maven { url 'http://repo.springsource.org/plugins-release' }
    }

    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.1'
    }
}
